// Generated by Dagger (https://google.github.io/dagger).
package com.weike.education.di.module;

import com.weike.education.network.api.ApiService;
import com.weike.education.network.helper.RetrofitHelper;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ApiModule_ProvideRetrofitHelperFactory implements Factory<RetrofitHelper> {
  private final ApiModule module;

  private final Provider<ApiService> apiServiceProvider;

  public ApiModule_ProvideRetrofitHelperFactory(
      ApiModule module, Provider<ApiService> apiServiceProvider) {
    this.module = module;
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public RetrofitHelper get() {
    return provideInstance(module, apiServiceProvider);
  }

  public static RetrofitHelper provideInstance(
      ApiModule module, Provider<ApiService> apiServiceProvider) {
    return proxyProvideRetrofitHelper(module, apiServiceProvider.get());
  }

  public static ApiModule_ProvideRetrofitHelperFactory create(
      ApiModule module, Provider<ApiService> apiServiceProvider) {
    return new ApiModule_ProvideRetrofitHelperFactory(module, apiServiceProvider);
  }

  public static RetrofitHelper proxyProvideRetrofitHelper(
      ApiModule instance, ApiService apiService) {
    return Preconditions.checkNotNull(
        instance.provideRetrofitHelper(apiService),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
